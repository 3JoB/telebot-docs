import{_ as e,c as t,o,Q as a}from"./chunks/framework.31184730.js";const T=JSON.parse('{"title":"概述","description":"","frontmatter":{"title":"概述","layout":"doc"},"headers":[],"relativePath":"zh/guide/overview.md","filePath":"zh/guide/overview.md","lastUpdated":null}'),l={name:"zh/guide/overview.md"},r=a('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><p>TelebotE 是 <a href="https://github.com/tucnak/telebot" target="_blank" rel="noreferrer">Telebot</a> 的快速更新和高效能分支，在此文件中除額外說明外，Telebot都代表TelebotE。</p><p>Telebot並不能直接遷移到TelebotE，因為TelebotE的部分API與Telebot不同，這是無奈之舉，而且隨著時間的推移，它的破壞性更新也會更多。</p><hr><p>Telebot是<a href="https://core.telegram.org/bots/api" target="_blank" rel="noreferrer">Telegram BotAPI</a>的機器人框架。</p><p>該軟體包為命令路由,內聯查詢請求和鍵盤提供了同類中最好的 API 作為回調。 實際上，我更進一步，沒有製作 1:1 API包裝器，而是選擇專注於API和效能之美。</p><p>Telebot的一些優點:</p><ul><li>真正簡潔的接口</li><li>命令路由</li><li>中介軟體</li><li>透明檔案介面</li><li>輕鬆的機器人回調</li></ul><p>Telebot API的所有方法都非常容易记忆和习惯。另外，考虑远程机器人 高负载就绪解决方案。我将测试和基准测试最受欢迎的操作，并在必要时进行优化 在不牺牲 API 质量的情况下反对他们。</p>',9),i=[r];function _(n,p,s,c,d,h){return o(),t("div",null,i)}const u=e(l,[["render",_]]);export{T as __pageData,u as default};
