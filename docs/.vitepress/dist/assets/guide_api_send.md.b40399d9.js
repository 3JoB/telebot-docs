import{_ as s,c as n,o as a,Q as e}from"./chunks/framework.31184730.js";const h=JSON.parse('{"title":"Sendable","description":"","frontmatter":{"title":"Sendable","page":"doc"},"headers":[],"relativePath":"guide/api/send.md","filePath":"guide/api/send.md","lastUpdated":null}'),l={name:"guide/api/send.md"},o=e(`<h1 id="sendable" tabindex="-1">Sendable <a class="header-anchor" href="#sendable" aria-label="Permalink to &quot;Sendable&quot;">​</a></h1><p>Send is undoubtedly the most important method in Telebot. <code>Send()</code> accepts a recipient (which can be a user, group or channel) and a sendable object. In addition to the media types provided by Telebot (photos, audio, videos, etc.), other types can be sent. If you create your own composite types, and they satisfy the Sendable interface, Telebot will be able to send them out.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Sendable is any object that can send itself.</span></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#6A737D;">// This is pretty cool, since it lets bots implement</span></span>
<span class="line"><span style="color:#6A737D;">// custom Sendables for complex kinds of media or</span></span>
<span class="line"><span style="color:#6A737D;">// chat objects spanning across multiple messages.</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Sendable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Send</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">Bot, Recipient, </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">SendOptions) (</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">Message, </span><span style="color:#F97583;">error</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Sendable is any object that can send itself.</span></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#6A737D;">// This is pretty cool, since it lets bots implement</span></span>
<span class="line"><span style="color:#6A737D;">// custom Sendables for complex kinds of media or</span></span>
<span class="line"><span style="color:#6A737D;">// chat objects spanning across multiple messages.</span></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Sendable</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Send</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">Bot, Recipient, </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">SendOptions) (</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">Message, </span><span style="color:#D73A49;">error</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>The only type that wasn&#39;t suitable for <code>Send()</code> at the time was Album, and there was a reason for that. <code>Album</code> was added a while ago, so they are a bit odd for backwards compatibility reasons. In fact, it can be sent but never received. Instead, Telegram returns a <code>[]Message</code> for each media object in the album:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">p </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">tele.Photo{File: tele.</span><span style="color:#79B8FF;">FromDisk</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;chicken.jpg&quot;</span><span style="color:#E1E4E8;">)}</span></span>
<span class="line"><span style="color:#E1E4E8;">v </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">tele.Video{File: tele.</span><span style="color:#79B8FF;">FromURL</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;http://video.mp4&quot;</span><span style="color:#E1E4E8;">)}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">msgs, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> b.</span><span style="color:#79B8FF;">SendAlbum</span><span style="color:#E1E4E8;">(user, tele.Album{p, v})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">p </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">tele.Photo{File: tele.</span><span style="color:#005CC5;">FromDisk</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;chicken.jpg&quot;</span><span style="color:#24292E;">)}</span></span>
<span class="line"><span style="color:#24292E;">v </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">tele.Video{File: tele.</span><span style="color:#005CC5;">FromURL</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;http://video.mp4&quot;</span><span style="color:#24292E;">)}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">msgs, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> b.</span><span style="color:#005CC5;">SendAlbum</span><span style="color:#24292E;">(user, tele.Album{p, v})</span></span></code></pre></div><h1 id="sendoptions" tabindex="-1">SendOptions <a class="header-anchor" href="#sendoptions" aria-label="Permalink to &quot;SendOptions&quot;">​</a></h1><p>Send options are objects and flags you can pass to <code>Send()</code>, <code>Edit()</code> and friends as optional arguments (following the recipient and the text/media). The most important one is called <code>SendOptions</code>, it lets you control all the properties of the message supported by Telegram. The only drawback is that it&#39;s rather inconvenient to use at times, so <code>Send()</code> supports multiple shorthands:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// regular send options</span></span>
<span class="line"><span style="color:#E1E4E8;">b.</span><span style="color:#79B8FF;">Send</span><span style="color:#E1E4E8;">(user, </span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">tele.SendOptions{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ReplyMarkup is a part of SendOptions,</span></span>
<span class="line"><span style="color:#6A737D;">// but often it&#39;s the only option you need</span></span>
<span class="line"><span style="color:#E1E4E8;">b.</span><span style="color:#79B8FF;">Send</span><span style="color:#E1E4E8;">(user, </span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">tele.ReplyMarkup{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// flags: no notification &amp;&amp; no web link preview</span></span>
<span class="line"><span style="color:#E1E4E8;">b.</span><span style="color:#79B8FF;">Send</span><span style="color:#E1E4E8;">(user, </span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">, tele.Silent, tele.NoPreview)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// regular send options</span></span>
<span class="line"><span style="color:#24292E;">b.</span><span style="color:#005CC5;">Send</span><span style="color:#24292E;">(user, </span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">tele.SendOptions{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ReplyMarkup is a part of SendOptions,</span></span>
<span class="line"><span style="color:#6A737D;">// but often it&#39;s the only option you need</span></span>
<span class="line"><span style="color:#24292E;">b.</span><span style="color:#005CC5;">Send</span><span style="color:#24292E;">(user, </span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">tele.ReplyMarkup{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// flags: no notification &amp;&amp; no web link preview</span></span>
<span class="line"><span style="color:#24292E;">b.</span><span style="color:#005CC5;">Send</span><span style="color:#24292E;">(user, </span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">, tele.Silent, tele.NoPreview)</span></span></code></pre></div><p>Full list of supported option-flags you can find <a href="https://pkg.go.dev/github.com/3JoB/telebot/v2#Option" target="_blank" rel="noreferrer">here</a>.</p>`,9),p=[o];function t(c,r,i,y,d,E){return a(),n("div",null,p)}const b=s(l,[["render",t]]);export{h as __pageData,b as default};
