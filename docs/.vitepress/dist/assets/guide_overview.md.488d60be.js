import{_ as e,c as t,o,Q as a}from"./chunks/framework.31184730.js";const u=JSON.parse('{"title":"Overview","description":"","frontmatter":{"title":"Overview","layout":"doc"},"headers":[],"relativePath":"guide/overview.md","filePath":"guide/overview.md","lastUpdated":null}'),r={name:"guide/overview.md"},i=a('<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">â€‹</a></h1><p>TelebotE is a fast-updating and high-performance fork of <a href="https://github.com/tucnak/telebot" target="_blank" rel="noreferrer">Telebot</a>. In this document, Telebot stands for TelebotE unless otherwise stated.</p><p>Telebot cannot be directly migrated to TelebotE because some of TelebotE&#39;s APIs are different from Telebot. This is a helpless move, and as time goes by, it will have more destructive updates.</p><hr><p>Telebot is a bot framework for <a href="https://core.telegram.org/bots/api" target="_blank" rel="noreferrer">Telegram Bot API</a>. This package provides the best of its kind API for command routing, inline query requests and keyboards, as well as callbacks. Actually, I went a couple steps further, so instead of making a 1:1 API wrapper I chose to focus on the beauty of API and performance. Some strong sides of Telebot are:</p><ul><li>Real concise API</li><li>Command routing</li><li>Middleware</li><li>Transparent File API</li><li>Effortless bot callbacks</li></ul><p>All the methods of Telebot API are extremely easy to memorize and get used to. Also, consider Telebot a highload-ready solution. I&#39;ll test and benchmark the most popular actions and if necessary, optimize against them without sacrificing API quality.</p>',7),s=[i];function l(n,d,c,p,f,h){return o(),t("div",null,s)}const b=e(r,[["render",l]]);export{u as __pageData,b as default};
